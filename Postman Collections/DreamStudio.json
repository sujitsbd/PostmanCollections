{
	"info": {
		"_postman_id": "b5f960d8-733d-4cb5-a5e3-7a320aa27646",
		"name": "DreamStudio",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Check The Server",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b6f6f52f-1071-4edb-b7ca-209465ecdb88",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body contains string\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"Healthy\");",
							"  ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "5f1e7272-19dc-4f3b-a524-e96460e62a0d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{URL}}"
			},
			"response": []
		},
		{
			"name": "Create New Project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "10c7e528-0d4d-424a-88e2-effbc0d156af",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Body contains string\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"project_id\");",
							"  pm.expect(pm.response.text()).to.include(\"message\");",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"pm.collectionVariables.set('project_id', jsonData.project_id);",
							"",
							"//pm.collectionVariables.set('project_id', Project_ID);"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "33d7bbbd-b6af-4b5f-ba57-b983bceb77cb",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"device_id\": \"212\",\n  \"purchase_id\": \"211\",\n  \"dreams\": [\n    {\n      \"id\": \"T001_V001\",\n      \"class_name\": \"\",\n      \"prefix_of_instance_prompt\": \"\",\n      \"suffix_of_instance_prompt\": \" in meadow picking flowers poster\",\n      \"class_prompt\": \"Goku Dalai Lama in meadow picking flowers poster\",\n      \"negative_prompt\": \"bad anatomy, bad composition, ugly, abnormal, unrealistic, double, contorted, disfigured, malformed, amateur, extra, duplicate\",\n      \"seed\": 615110,\n      \"guidance_scale\": 7,\n      \"height\": 768,\n      \"width\": 512,\n      \"steps\": 50,\n      \"number_of_output_img\": 20\n    }\n  ]\n}"
				},
				"url": "{{URL}}/projects"
			},
			"response": []
		},
		{
			"name": "Upload Image",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "65e41da9-7a86-425f-a55d-e008802b6180",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Body contains string\",function () {",
							"  pm.expect(pm.response.text()).to.include(\"status\");",
							"  //pm.expect(pm.response.text()).to.include(\"Image uploaded Successfully\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"check the status\",function () {",
							"    pm.expect(jsonData.status).is.to.equal(\"Image uploaded Successfully\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "deb2ec4a-f6e5-4b51-bc74-208246085cca",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "multipart/form-data",
						"type": "text"
					},
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "image",
							"type": "file",
							"src": "/Users/kitegamesstudio/Documents/Postman Test Data/[Sujit_Sarker]-[Kite_Games _Studio_Ltd.]-Team2.jpg"
						}
					]
				},
				"url": {
					"raw": "{{URL}}/upload-image/{{project_id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"upload-image",
						"{{project_id}}"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Start",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f35da027-6dcb-4b05-b849-1f28d9742a5a",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Body contains string\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"status\");",
							"  pm.expect(pm.response.text()).to.include(\"Dreamset uploaded Successfully\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "c58b2a22-f598-40fb-9846-5d098b471369",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"dreams\": [\n    {\n      \"id\": \"T001_V001\",\n      \"class_name\": \"\",\n      \"prefix_of_instance_prompt\": \"\",\n      \"suffix_of_instance_prompt\": \" in meadow picking flowers poster\",\n      \"class_prompt\": \"Goku Dalai Lama in meadow picking flowers poster\",\n      \"negative_prompt\": \"bad anatomy, bad composition, ugly, abnormal, unrealistic, double, contorted, disfigured, malformed, amateur, extra, duplicate\",\n      \"seed\": 615110,\n      \"guidance_scale\": 7,\n      \"height\": 768,\n      \"width\": 512,\n      \"steps\": 50,\n      \"number_of_output_img\": 20\n    }\n  ]\n}"
				},
				"url": {
					"raw": "{{URL}}/upload-dreams/{{project_id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"upload-dreams",
						"{{project_id}}"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Pending",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0bcefd9e-2ad1-408b-b4cb-6b923fd2b447",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Body contains string\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"id\");",
							"  pm.expect(pm.response.text()).to.include(\"project_id\");",
							"  pm.expect(pm.response.text()).to.include(\"status\");",
							"  pm.expect(pm.response.text()).to.include(\"PENDING\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "e57e5cbc-d4ae-4bcb-8a37-351bf0cfacf8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "{{URL}}/process-dream/{{project_id}}"
			},
			"response": []
		},
		{
			"name": "Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c33166db-f36b-4e20-a094-61e381e0ae9f",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Body contains string\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"status\");",
							"  pm.expect(pm.response.text()).to.include(\"SUCCESS\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "24854d4c-a914-4f37-aed2-c2238dae3988",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{URL}}/project-result/{{project_id}}"
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6df310d0-f103-431c-a6a7-a942efc16426",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Body contains string\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"status\");",
							"  pm.expect(pm.response.text()).to.include(\"deleted successfully\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "ec98d1a6-7a8d-4790-ab99-158cd555d4a6",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "{{URL}}/delete-project/{{project_id}}"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "a3220143-2434-4345-a5c9-b1b1736af193",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "dcfd8d51-9bee-42bd-9b21-c5999894a893",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "ffa4c4ab-1711-418e-afec-93f401a6280c",
			"key": "URL",
			"value": "http://35.208.205.152:8000",
			"type": "string"
		},
		{
			"id": "d2e52ca0-9b97-46a5-9192-bcd98ed0bcd3",
			"key": "project_id",
			"value": "",
			"type": "string"
		}
	]
}